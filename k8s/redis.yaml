apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: hyperopt-production
  labels:
    app: hyperopt-platform
    component: redis
    environment: production
spec:
  serviceName: redis-service
  replicas: 1
  selector:
    matchLabels:
      app: hyperopt-platform
      component: redis
  template:
    metadata:
      labels:
        app: hyperopt-platform
        component: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
        command:
          - redis-server
          - /etc/redis/redis.conf
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: hyperopt-secrets
              key: REDIS_PASSWORD
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - --raw
            - incr
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - --raw
            - incr
            - ping
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
  volumeClaimTemplates:
  - metadata:
      name: redis-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
      storageClassName: fast-ssd

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: hyperopt-production
  labels:
    app: hyperopt-platform
    component: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
    name: redis
  selector:
    app: hyperopt-platform
    component: redis
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: hyperopt-production
  labels:
    app: hyperopt-platform
    component: redis-config
data:
  redis.conf: |
    # Network Configuration
    bind 0.0.0.0
    port 6379
    tcp-backlog 511
    timeout 300
    tcp-keepalive 300
    
    # General Configuration
    daemonize no
    supervised no
    pidfile /data/redis.pid
    loglevel notice
    logfile ""
    databases 16
    
    # Security Configuration
    requirepass ${REDIS_PASSWORD}
    
    # Memory Management
    maxmemory 768mb
    maxmemory-policy allkeys-lru
    maxmemory-samples 5
    
    # Persistence Configuration
    save 900 1
    save 300 10
    save 60 10000
    
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data
    
    # AOF Configuration
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    aof-load-truncated yes
    aof-use-rdb-preamble yes
    
    # Performance Tuning
    hash-max-ziplist-entries 512
    hash-max-ziplist-value 64
    list-max-ziplist-size -2
    list-compress-depth 0
    set-max-intset-entries 512
    zset-max-ziplist-entries 128
    zset-max-ziplist-value 64
    
    # Client Configuration
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit replica 256mb 64mb 60
    client-output-buffer-limit pubsub 32mb 8mb 60
    
    # Slow Log Configuration
    slowlog-log-slower-than 10000
    slowlog-max-len 128
    
    # Latency Monitoring
    latency-monitor-threshold 100
    
    # Threading (Redis 6+)
    # io-threads 2
    # io-threads-do-reads yes

---
# Redis Staging Configuration
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-staging
  namespace: hyperopt-staging
  labels:
    app: hyperopt-platform
    component: redis
    environment: staging
spec:
  serviceName: redis-service
  replicas: 1
  selector:
    matchLabels:
      app: hyperopt-platform
      component: redis
  template:
    metadata:
      labels:
        app: hyperopt-platform
        component: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
        command:
          - redis-server
          - /etc/redis/redis.conf
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: hyperopt-secrets-staging
              key: REDIS_PASSWORD
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        - name: redis-config-staging
          mountPath: /etc/redis
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - --raw
            - incr
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - --raw
            - incr
            - ping
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
  volumeClaimTemplates:
  - metadata:
      name: redis-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
      storageClassName: standard

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: hyperopt-staging
  labels:
    app: hyperopt-platform
    component: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
    name: redis
  selector:
    app: hyperopt-platform
    component: redis
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config-staging
  namespace: hyperopt-staging
  labels:
    app: hyperopt-platform
    component: redis-config
data:
  redis.conf: |
    # Network Configuration
    bind 0.0.0.0
    port 6379
    tcp-backlog 511
    timeout 300
    tcp-keepalive 300
    
    # General Configuration
    daemonize no
    supervised no
    pidfile /data/redis.pid
    loglevel notice
    logfile ""
    databases 16
    
    # Security Configuration
    requirepass ${REDIS_PASSWORD}
    
    # Memory Management (Lower limits for staging)
    maxmemory 384mb
    maxmemory-policy allkeys-lru
    maxmemory-samples 5
    
    # Persistence Configuration (Less frequent saves for staging)
    save 1800 1
    save 600 10
    save 300 100
    
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data
    
    # AOF Configuration
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 32mb
    aof-load-truncated yes
    aof-use-rdb-preamble yes
    
    # Performance Tuning
    hash-max-ziplist-entries 512
    hash-max-ziplist-value 64
    list-max-ziplist-size -2
    list-compress-depth 0
    set-max-intset-entries 512
    zset-max-ziplist-entries 128
    zset-max-ziplist-value 64
    
    # Client Configuration
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit replica 128mb 32mb 60
    client-output-buffer-limit pubsub 16mb 4mb 60
    
    # Slow Log Configuration
    slowlog-log-slower-than 10000
    slowlog-max-len 64
    
    # Latency Monitoring
    latency-monitor-threshold 100 