version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: trading-api-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/etc/prometheus/prometheus
      - ./alertmanager:/etc/prometheus/alertmanager
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--alertmanager.notification-queue-capacity=10000'
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - alertmanager

  grafana:
    image: grafana/grafana:latest
    container_name: trading-api-grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=trading_api_2024
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - prometheus
      - loki

  # Alertmanager for handling alerts
  alertmanager:
    image: prom/alertmanager:latest
    container_name: trading-api-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
      - '--cluster.advertise-address=0.0.0.0:9093'
    restart: unless-stopped
    networks:
      - monitoring

  # Optional: Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: trading-api-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - monitoring

  # Loki for log aggregation
  loki:
    image: grafana/loki:latest
    container_name: trading-api-loki
    ports:
      - "3100:3100"
    volumes:
      - ../loki/loki-config.yml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: 
      - '-config.file=/etc/loki/local-config.yaml'
    restart: unless-stopped
    networks:
      - monitoring

  # Promtail for log shipping
  promtail:
    image: grafana/promtail:latest
    container_name: trading-api-promtail
    ports:
      - "9080:9080"
    volumes:
      - ../promtail/promtail-config.yml:/etc/promtail/config.yml
      - ../../logs:/app/logs:ro
      - /var/log:/var/log:ro
      - /tmp:/tmp
    command:
      - '-config.file=/etc/promtail/config.yml'
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - loki

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:
  loki_data:

networks:
  monitoring:
    driver: bridge 