# Multi-stage build for HyperOpt Strategy Platform Scheduler
FROM python:3.9-slim as builder

# Set build arguments
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION

# Add metadata
LABEL org.opencontainers.image.title="HyperOpt Strategy Platform Scheduler"
LABEL org.opencontainers.image.description="Task scheduler and job coordination service"
LABEL org.opencontainers.image.version=$VERSION
LABEL org.opencontainers.image.created=$BUILD_DATE
LABEL org.opencontainers.image.revision=$VCS_REF
LABEL org.opencontainers.image.vendor="HyperOpt Team"

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    python3-dev \
    libpq-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt requirements-scheduler.txt ./
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements-scheduler.txt

# Copy source code
COPY src/ ./src/
COPY config/ ./config/
COPY scripts/ ./scripts/

# Production stage
FROM python:3.9-slim as production

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libpq5 \
    curl \
    cron \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user
RUN groupadd -r scheduler && useradd -r -g scheduler scheduler

# Set working directory
WORKDIR /app

# Copy built application from builder stage
COPY --from=builder /usr/local/lib/python3.9/site-packages /usr/local/lib/python3.9/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin
COPY --from=builder /app ./

# Create necessary directories
RUN mkdir -p /app/logs /app/data /app/schedules && \
    chown -R scheduler:scheduler /app

# Copy scheduler scripts
COPY docker/scripts/scheduler-entrypoint.sh /usr/local/bin/
COPY docker/scripts/scheduler-healthcheck.py /usr/local/bin/
COPY docker/config/crontab /etc/cron.d/hyperopt-scheduler
RUN chmod +x /usr/local/bin/scheduler-entrypoint.sh && \
    chmod 0644 /etc/cron.d/hyperopt-scheduler

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV ENVIRONMENT=production
ENV SCHEDULER_TYPE=celery-beat
ENV CELERY_BROKER_URL=redis://redis:6379/0
ENV CELERY_RESULT_BACKEND=redis://redis:6379/0

# Scheduler-specific settings
ENV SCHEDULER_INTERVAL=60
ENV CLEANUP_INTERVAL=3600
ENV MAX_TASK_RETRIES=3
ENV TASK_TIMEOUT=7200

# Health check
HEALTHCHECK --interval=60s --timeout=15s --start-period=30s --retries=3 \
    CMD python /usr/local/bin/scheduler-healthcheck.py

# Switch to non-root user
USER scheduler

# Set entrypoint
ENTRYPOINT ["/usr/local/bin/scheduler-entrypoint.sh"]

# Default command - Celery beat scheduler
CMD ["celery", "-A", "src.workers.celery_app", "beat", "--loglevel=info", "--scheduler=django_celery_beat.schedulers:DatabaseScheduler"] 